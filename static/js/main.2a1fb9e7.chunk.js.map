{"version":3,"sources":["assets/red-marker.png","components/Header.jsx","components/MapComponent.jsx","App.js","index.js"],"names":["module","exports","Header","className","Component","MapComponent","customIcon","Icon","iconUrl","require","iconSize","quakeFeaturesMarker","this","props","quakes","map","quake","position","magnitude","Marker","key","id","icon","Popup","Date","time","toUTCString","place","href","url","Map","center","zoom","minZoom","maxBounds","scrollWheelZoom","attributionControl","TileLayer","App","state","defaultEarthquakesData","serverNotConnectedMsg","isLoaded","axios","get","then","res","selectedData","data","features","properties","mag","alert","code","geometry","coordinates","setState","catch","error","console","log","mapSection","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iKAAAA,EAAOC,QAAU,IAA0B,wC,mICc5BC,G,6KAVP,OACI,4BAAQC,UAAU,gBACd,wBAAIA,UAAU,cAAd,gBACA,uBAAGA,UAAU,aAAb,8C,GALKC,c,uCCkENC,E,uKAzDX,IAAMC,EAAa,IAAIC,OAAK,CAC1BC,QAASC,EAAQ,IACjBC,SAAU,CAAC,GAAI,MAIXC,EAAsBC,KAAKC,MAAMC,OAAOC,KAAI,SAAAC,GAChD,IAAMC,EAAW,CAACD,EAAMC,SAAS,GAAID,EAAMC,SAAS,IACpD,OAAID,EAAME,WAAa,EAEnB,kBAACC,EAAA,EAAD,CAAQC,IAAKJ,EAAMK,GAAIJ,SAAUA,EAAUK,KAAMhB,GAC/C,kBAACiB,EAAA,EAAD,KACE,0BAAMpB,UAAU,oBAAoB,IAAIqB,KAAKR,EAAMS,MAAMC,eACzD,6BACA,0BAAMvB,UAAU,yBAAyBa,EAAME,WAHjD,+BAG+FF,EAAMW,MAHrG,uBAIkB,uBAAGC,KAAMZ,EAAMa,KAAf,UAMpB,kBAACV,EAAA,EAAD,CAAQC,IAAKJ,EAAMK,GAAIJ,SAAUA,GAC/B,kBAACM,EAAA,EAAD,KACE,0BAAMpB,UAAU,oBAAoB,IAAIqB,KAAKR,EAAMS,MAAMC,eACzD,6BACA,0BAAMvB,UAAU,oBAAoBa,EAAME,WAH5C,+BAG0FF,EAAMW,MAHhG,uBAIoB,uBAAGC,KAAMZ,EAAMa,KAAf,aAQ5B,OACE,kBAACC,EAAA,EAAD,CACE3B,UAAU,eACV4B,OAAQ,CAAC,GAAI,GACbC,KAAM,EACNC,QAAQ,MACRC,UAAW,CACT,CAAC,GAAI,KACL,EAAE,IAAK,MAETC,iBAAiB,EACjBC,oBAAoB,GAGpB,kBAACC,EAAA,EAAD,CAAWR,IAAI,uDACdlB,O,GArDkBP,aC8EZkC,E,kDA5Eb,WAAYzB,GAAQ,IAAD,8BACjB,cAAMA,IACD0B,MAAQ,CACXC,uBAAwB,GACxBC,sBAAuB,GACvBC,UAAU,GALK,E,gEASE,IAAD,OAClBC,IAAMC,IAAN,6EACGC,MAAK,SAAAC,GAUJ,IAAMC,EAAeD,EAAIE,KAAKC,SAASlC,KAAI,SAAAC,GACzC,MAAO,CACLE,UAAWF,EAAMkC,WAAWC,IAC5BxB,MAAOX,EAAMkC,WAAWvB,MACxBE,IAAKb,EAAMkC,WAAWrB,IACtBJ,KAAMT,EAAMkC,WAAWzB,KACvB2B,MAAOpC,EAAMkC,WAAWE,MACxBC,KAAMrC,EAAMkC,WAAWG,KACvBpC,SAAU,CACRD,EAAMsC,SAASC,YAAY,GAC3BvC,EAAMsC,SAASC,YAAY,GAC3BvC,EAAMsC,SAASC,YAAY,IAE7BlC,GAAIL,EAAMK,OAId,EAAKmC,SAAS,CACZhB,uBAAwBO,EACxBL,UAAU,OAIbe,OAAM,SAAAC,GACL,EAAKF,SAAS,CAAEf,sBAAuB,kCAAmCC,SAAU,SACpFiB,QAAQC,IAAIF,GACZN,MAAM,iG,+BAQV,IAAIS,EAQJ,OAHEA,EAHGjD,KAAK2B,MAAMG,SAGD,kBAAC,EAAD,CAAc5B,OAAQF,KAAK2B,MAAMC,yBAFjC,aAMb,6BACE,kBAAC,EAAD,MACA,yBAAKrC,UAAU,gBACZ0D,Q,GApEOzD,aCFlB0D,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.2a1fb9e7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/red-marker.6ce3ca72.png\";","import React, { Component } from 'react'\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <header className=\"quake_header\">\r\n                <h1 className=\"navbar__h1\">QuakeTracker</h1>\r\n                <p className=\"navbar__p\">Visualize the Earthquake in real-time</p>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Header;","import React, { Component } from \"react\";\r\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet';\r\n\r\nimport { Icon } from \"leaflet\";\r\n\r\n\r\n\r\nclass MapComponent extends Component {\r\n\r\n  render() {\r\n\r\n    const customIcon = new Icon({\r\n      iconUrl: require('../assets/red-marker.png'),     // red-marker for severe alert\r\n      iconSize: [30, 41]\r\n    });\r\n\r\n\r\n    const quakeFeaturesMarker = this.props.quakes.map(quake => {\r\n      const position = [quake.position[1], quake.position[0]];    // react-leaflet coordinate position format is [lat, lng]\r\n      if (quake.magnitude >= 5) {\r\n        return (\r\n          <Marker key={quake.id} position={position} icon={customIcon}>\r\n            <Popup>\r\n              <span className=\"popup__quaketime\">{new Date(quake.time).toUTCString()}</span>\r\n              <br />\r\n              <span className=\"quake__magnitude__red\">{quake.magnitude}</span> magnitude earthquake. Near {quake.place}.\r\n            Find more details <a href={quake.url}>here</a>\r\n            </Popup>\r\n          </Marker>\r\n        );\r\n      } else {\r\n        return (\r\n          <Marker key={quake.id} position={position} >\r\n            <Popup>\r\n              <span className=\"popup__quaketime\">{new Date(quake.time).toUTCString()}</span>\r\n              <br />\r\n              <span className=\"quake__magnitude\">{quake.magnitude}</span> magnitude earthquake. Near {quake.place}.\r\n              Find more details <a href={quake.url}>here</a>\r\n            </Popup>\r\n          </Marker>\r\n        );\r\n      }\r\n    });\r\n\r\n\r\n    return (\r\n      <Map\r\n        className=\"map__section\"\r\n        center={[38, 6]}\r\n        zoom={3}\r\n        minZoom=\"2.5\"\r\n        maxBounds={[\r\n          [90, 180],\r\n          [-90, -180],\r\n        ]}\r\n        scrollWheelZoom={false}\r\n        attributionControl={false}\r\n      >\r\n\r\n        <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n        {quakeFeaturesMarker}\r\n\r\n      </Map >\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default MapComponent;","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport './App.css';\r\n\r\nimport Header from './components/Header';\r\nimport MapComponent from './components/MapComponent';\r\n\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      defaultEarthquakesData: [],  // [{}, {}, {},----]\r\n      serverNotConnectedMsg: '',\r\n      isLoaded: false\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get(`https://earthquake.usgs.gov/fdsnws/event/1/query?format=geojson&limit=500`)\r\n      .then(res => {\r\n        // console.log(res.data.features);    ////---> returns whole features array from JSON api data\r\n\r\n        // this.setState({\r\n        //   features: res.data.features      ////---> other and direct way to take and set whole features array and pass the 'features' as a props into MapComponent'.\r\n        // });\r\n\r\n\r\n        ////----> Below selectedData is a selected properties from a whole json data which returns a dictionary of each quake   \r\n\r\n        const selectedData = res.data.features.map(quake => {\r\n          return {\r\n            magnitude: quake.properties.mag,\r\n            place: quake.properties.place,\r\n            url: quake.properties.url,\r\n            time: quake.properties.time,\r\n            alert: quake.properties.alert,\r\n            code: quake.properties.code,\r\n            position: [\r\n              quake.geometry.coordinates[0], //longitude\r\n              quake.geometry.coordinates[1], //latitude\r\n              quake.geometry.coordinates[2], //depth\r\n            ],\r\n            id: quake.id,\r\n          }\r\n        });\r\n\r\n        this.setState({\r\n          defaultEarthquakesData: selectedData,\r\n          isLoaded: true\r\n        });\r\n\r\n      })\r\n      .catch(error => {\r\n        this.setState({ serverNotConnectedMsg: \"Can't fetch data at this moment\", isLoaded: 'true' });\r\n        console.log(error);\r\n        alert(\"We couldn't reach our servers. You may not be connected to internet. Please try again...\");\r\n      })\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n\r\n    let mapSection;\r\n\r\n    if (!this.state.isLoaded) {\r\n      mapSection = \"Loading...\";\r\n    } else {\r\n      mapSection = <MapComponent quakes={this.state.defaultEarthquakesData} />;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <div className=\"map__section\">\r\n          {mapSection}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default App;\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}